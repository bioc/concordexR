% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AllGenerics.R, R/nomap.R
\name{calculateNomap}
\alias{calculateNomap}
\alias{calculateNomap,ANY-method}
\title{Compute the Nomap coefficient}
\usage{
calculateNomap(x, ...)

\S4method{calculateNomap}{ANY}(
  x,
  labels,
  k = 20,
  n.iter = 15,
  return.map = TRUE,
  BPPARAM = SerialParam()
)
}
\arguments{
\item{x}{A numeric matrix specifying the neighborhood structure of
observations. Typically an adjacency matrix produced by a k-Nearest
Neighbor algorithm. It can also be a matrix whose rows correspond to each
observation and columns correspond to neighbor indices, i.e. matrix form of
an adjacency list which can be a matrix due to fixed number of neighbors.}

\item{...}{Arguments passed to methods.}

\item{labels}{A numeric or character vector containing the label or class
corresponding to each observation. For example, a cell type or cluster ID.}

\item{k}{Number of neighbors to expect for each observation. Defaults to 20.}

\item{n.iter}{A number specifying the number of permutations for correcting
the coefficient.}

\item{return.map}{Logical, whether to return the matrix of the number of
cells of each label in the neighborhood of cells of each label.}

\item{BPPARAM}{A \code{\link{BiocParallelParam}} object specifying whether
and how computing the metric for numerous observations shall be
parallelized.}
}
\value{
A named list with the following components:
\describe{
\item{\code{nomap}}{
The raw nomap coefficient corresponding to the original label assignments.
}

\item{\code{mean_random_nomap}}{
The average of \code{n.iter} nomap coefficients. Nomap coefficients are computed
after permuting the labels and reassigning them to new observations.
}
\item{\code{corrected_nomap}}{
Simply the raw nomap coefficient divided by the average of the permuted
coefficients.
}
\item{\code{simulated}}{
Numeric vector of the nomap coefficients from permuted labels, showing the
null distribution.
}
\item{\code{map}}{
Numeric matrix of the number of cells of each label in the neighborhood of
cells of each label. Only returned when \code{return.map = TRUE}.
}
}
}
\description{
Compute the raw and corrected nomap coefficient using a
neighborhood graph and observation labels.
}
\examples{
# Simplest case where input is a nxn matrix
# Neighbors can be oriented along the rows or columns
nCells <- 10
k <- 3
labels <- sample(paste0("l", seq_len(3)), nCells, replace=TRUE)

mtx <- sapply(seq_len(nCells), function(x) {
    out <- rep(0, nCells)
    out[-x] <- sample(c(rep(1, k), rep(0, nCells - k - 1)))
    out
})

res <- calculateNomap(mtx, labels, k = k)

res

# Also works if input matrix is nxk or kxn
mtx <- sapply(seq_len(nCells), function(x) {
  out <- sample((seq_len(nCells))[-x], k)
  out
})

res <- calculateNomap(mtx, labels, k = k)

res
}
